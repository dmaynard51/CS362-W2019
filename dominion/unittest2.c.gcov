        -:    0:Source:unittest2.c
        -:    0:Graph:unittest2.gcno
        -:    0:Data:unittest2.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
        -:    8:
        -:    9:
        -:   10:
        -:   11:// runs the tests
        1:   12:int main () {
        -:   13:    
        -:   14:    //create kingdom cards
        1:   15:    int randomNumber = 1000;
        1:   16:    int kingdomCards[10] = {adventurer, council_room, 
        -:   17:    feast, gardens, mine, remodel, smithy, village, 
        -:   18:    treasure_map, outpost};
        1:   19:    int seed = 1500;
        1:   20:    int playerNumber = 2;
        -:   21:    struct gameState gstate;
        -:   22:    int initGame;
        1:   23:    initGame = initializeGame(playerNumber, kingdomCards, randomNumber,  &gstate);
        -:   24:    int i;
        -:   25:    
       12:   26:    for (i = 10; i >= 0; i--)
        -:   27:    {
       11:   28:        gstate.supplyCount[province] = i;
       11:   29:        if (i > 0)
        -:   30:        {
       10:   31:            printf("Expected Game should not be over: 0 Actual: %i\n", isGameOver(&gstate));
        -:   32:        }
        -:   33:        else
        -:   34:        {
        1:   35:            printf("Expected game should be over: 1 Actual: %i\n", isGameOver(&gstate));
        -:   36:        }
        -:   37:    }
        -:   38:    
        1:   39:    printf("PASS!\n");
        -:   40:    /*
        -:   41:    //start game over
        -:   42:    initGame = initializeGame(playerNumber, kingdomCards, randomNumber,  &gstate);
        -:   43:    gstate.supplyCount[province] = 2;
        -:   44:    //check if game is over if all province cards are gone
        -:   45:    //remove all province cards from the current state
        -:   46:    gstate.supplyCount[province] = 0;
        -:   47:    printf("Expected: 1 Actual: %i\n", isGameOver(&gstate));
        -:   48:    
        -:   49: */
        -:   50: 
        1:   51:    return 0;
        -:   52:    
        -:   53:}
