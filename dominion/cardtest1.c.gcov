        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:#include <string.h>
        -:    8:
        -:    9:
        -:   10:
        -:   11:
        -:   12:// runs the tests
        1:   13:int main () {
        -:   14:    
        -:   15:    //create kingdom cards
        1:   16:    int randomNumber = 1000;
        1:   17:    int kingdomCards[10] = {adventurer, council_room, 
        -:   18:    feast, gardens, mine, remodel, smithy, village, 
        -:   19:    treasure_map, outpost};
        1:   20:    int seed = 1500;
        1:   21:    int playerNumber = 2;
        -:   22:    struct gameState gstate;
        -:   23:    int initGame;
        -:   24:    int handCount;
        -:   25:    int i;
        1:   26:    int bonus = 1;
        1:   27:    int player = 0;
        1:   28:    int choice1 = 0;
        1:   29:    int choice2 = 0;
        1:   30:    int choice3 = 0;
        1:   31:    int handPos1 = 0;
        -:   32:
        -:   33:    
        -:   34:    int cardEffect1;
        -:   35:    
        -:   36:    
        -:   37:    
        -:   38:    //holds the current game state
        1:   39:    memset(&gstate,15,sizeof(struct gameState));
        1:   40:    initializeGame(playerNumber, kingdomCards, seed, &gstate);
        -:   41:    
        -:   42:    //set player0 cards to 0
        1:   43:    gstate.handCount[player] = 0;
        -:   44:    
        -:   45:    //should print out 0
        1:   46:    printf("Starting handcount at %i\n", gstate.handCount[player]);
        -:   47:    
        -:   48:    //should increase cards by 2
        1:   49:    cardEffect1 = cardEffect(smithy, choice1, choice2, choice3, &gstate, handPos1, &bonus);
        1:   50:    printf("Checking increased handcount.\n");
        -:   51:    //should print out 2
        1:   52:    printf("Hand count increased by %i\n", gstate.handCount[player]);
        1:   53:    printf("FAIL, expected handcount to be 3!\n");
        1:   54:    return 0;
        -:   55:    
        -:   56:}
